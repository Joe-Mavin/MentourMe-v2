name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        run: |
          cd server
          npm ci
        env:
          NODE_ENV: test

      - name: Run tests
        run: |
          cd server
          npm test
        env:
          NODE_ENV: test
          DB_DATABASE: mentourme_test
          DB_HOST: localhost
          DB_USER: root
          DB_PASSWORD: ''
          JWT_SECRET: test_secret_key_for_github_actions

      - name: Deploy to Render
        if: success()
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "⚠️ RENDER_DEPLOY_HOOK secret not configured"
            exit 1
          fi
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}" || {
            echo "❌ Render deployment failed"
            exit 1
          }
          echo "✅ Render deployment triggered successfully"

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Run tests
        run: |
          cd client
          npm test
        env:
          NODE_ENV: test

      - name: Build application
        run: |
          cd client
          npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_WS_URL: ${{ secrets.VITE_WS_URL }}

      - name: Deploy to Cloudflare Pages
        if: success()
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: mentourme
          directory: client/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  notify-deployment:
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy-backend.result }}" == "success" ] && [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
            echo "✅ Deployment successful"
          else
            echo "❌ Deployment failed"
            exit 1
          fi
